package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type TeamworkApplicationIdentityApplicationIdentityType string

const (
	TeamworkApplicationIdentityApplicationIdentityTypeaadApplication TeamworkApplicationIdentityApplicationIdentityType = "AadApplication"
	TeamworkApplicationIdentityApplicationIdentityTypebot TeamworkApplicationIdentityApplicationIdentityType = "Bot"
	TeamworkApplicationIdentityApplicationIdentityTypeoffice365Connector TeamworkApplicationIdentityApplicationIdentityType = "Office365Connector"
	TeamworkApplicationIdentityApplicationIdentityTypeoutgoingWebhook TeamworkApplicationIdentityApplicationIdentityType = "OutgoingWebhook"
	TeamworkApplicationIdentityApplicationIdentityTypetenantBot TeamworkApplicationIdentityApplicationIdentityType = "TenantBot"
)


func PossibleValuesForTeamworkApplicationIdentityApplicationIdentityType() []string {
	return []string{
		string(TeamworkApplicationIdentityApplicationIdentityTypeaadApplication),
string(TeamworkApplicationIdentityApplicationIdentityTypebot),
string(TeamworkApplicationIdentityApplicationIdentityTypeoffice365Connector),
string(TeamworkApplicationIdentityApplicationIdentityTypeoutgoingWebhook),
string(TeamworkApplicationIdentityApplicationIdentityTypetenantBot),
	}
}



func parseTeamworkApplicationIdentityApplicationIdentityType(input string) (*TeamworkApplicationIdentityApplicationIdentityType, error) {
	vals := map[string]TeamworkApplicationIdentityApplicationIdentityType{
		"aadapplication": TeamworkApplicationIdentityApplicationIdentityTypeaadApplication,
"bot": TeamworkApplicationIdentityApplicationIdentityTypebot,
"office365connector": TeamworkApplicationIdentityApplicationIdentityTypeoffice365Connector,
"outgoingwebhook": TeamworkApplicationIdentityApplicationIdentityTypeoutgoingWebhook,
"tenantbot": TeamworkApplicationIdentityApplicationIdentityTypetenantBot,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := TeamworkApplicationIdentityApplicationIdentityType(input)
	return &out, nil
}
