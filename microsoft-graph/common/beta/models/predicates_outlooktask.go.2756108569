package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type OutlookTaskOperationPredicate struct {
	 AssignedTo *string
	 ChangeKey *string
	 CreatedDateTime *string
	 HasAttachments *bool
	 Id *string
	 IsReminderOn *bool
	 LastModifiedDateTime *string
	 ODataType *string
	 Owner *string
	 ParentFolderId *string
	 Subject *string
}

func (p OutlookTaskOperationPredicate) Matches(input OutlookTask) bool {

	if p.AssignedTo != nil && (input.AssignedTo == nil || *p.AssignedTo != *input.AssignedTo) {
	 	return false
	}


	if p.ChangeKey != nil && (input.ChangeKey == nil || *p.ChangeKey != *input.ChangeKey) {
	 	return false
	}


	if p.CreatedDateTime != nil && (input.CreatedDateTime == nil || *p.CreatedDateTime != *input.CreatedDateTime) {
	 	return false
	}


	if p.HasAttachments != nil && (input.HasAttachments == nil || *p.HasAttachments != *input.HasAttachments) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.IsReminderOn != nil && (input.IsReminderOn == nil || *p.IsReminderOn != *input.IsReminderOn) {
	 	return false
	}


	if p.LastModifiedDateTime != nil && (input.LastModifiedDateTime == nil || *p.LastModifiedDateTime != *input.LastModifiedDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.Owner != nil && (input.Owner == nil || *p.Owner != *input.Owner) {
	 	return false
	}


	if p.ParentFolderId != nil && (input.ParentFolderId == nil || *p.ParentFolderId != *input.ParentFolderId) {
	 	return false
	}


	if p.Subject != nil && (input.Subject == nil || *p.Subject != *input.Subject) {
	 	return false
	}


	return true
}

