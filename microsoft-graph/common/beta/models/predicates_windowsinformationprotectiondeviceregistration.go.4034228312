package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type WindowsInformationProtectionDeviceRegistrationOperationPredicate struct {
	 DeviceMacAddress *string
	 DeviceName *string
	 DeviceRegistrationId *string
	 DeviceType *string
	 Id *string
	 LastCheckInDateTime *string
	 ODataType *string
	 UserId *string
}

func (p WindowsInformationProtectionDeviceRegistrationOperationPredicate) Matches(input WindowsInformationProtectionDeviceRegistration) bool {

	if p.DeviceMacAddress != nil && (input.DeviceMacAddress == nil || *p.DeviceMacAddress != *input.DeviceMacAddress) {
	 	return false
	}


	if p.DeviceName != nil && (input.DeviceName == nil || *p.DeviceName != *input.DeviceName) {
	 	return false
	}


	if p.DeviceRegistrationId != nil && (input.DeviceRegistrationId == nil || *p.DeviceRegistrationId != *input.DeviceRegistrationId) {
	 	return false
	}


	if p.DeviceType != nil && (input.DeviceType == nil || *p.DeviceType != *input.DeviceType) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastCheckInDateTime != nil && (input.LastCheckInDateTime == nil || *p.LastCheckInDateTime != *input.LastCheckInDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.UserId != nil && (input.UserId == nil || *p.UserId != *input.UserId) {
	 	return false
	}


	return true
}

