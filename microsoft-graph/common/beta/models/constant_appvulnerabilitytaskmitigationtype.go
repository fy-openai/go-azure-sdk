package models

import "strings"

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type AppVulnerabilityTaskMitigationType string

const (
	AppVulnerabilityTaskMitigationTypesecurityConfiguration AppVulnerabilityTaskMitigationType = "SecurityConfiguration"
	AppVulnerabilityTaskMitigationTypeuninstall             AppVulnerabilityTaskMitigationType = "Uninstall"
	AppVulnerabilityTaskMitigationTypeunknown               AppVulnerabilityTaskMitigationType = "Unknown"
	AppVulnerabilityTaskMitigationTypeupdate                AppVulnerabilityTaskMitigationType = "Update"
)

func PossibleValuesForAppVulnerabilityTaskMitigationType() []string {
	return []string{
		string(AppVulnerabilityTaskMitigationTypesecurityConfiguration),
		string(AppVulnerabilityTaskMitigationTypeuninstall),
		string(AppVulnerabilityTaskMitigationTypeunknown),
		string(AppVulnerabilityTaskMitigationTypeupdate),
	}
}

func parseAppVulnerabilityTaskMitigationType(input string) (*AppVulnerabilityTaskMitigationType, error) {
	vals := map[string]AppVulnerabilityTaskMitigationType{
		"securityconfiguration": AppVulnerabilityTaskMitigationTypesecurityConfiguration,
		"uninstall":             AppVulnerabilityTaskMitigationTypeuninstall,
		"unknown":               AppVulnerabilityTaskMitigationTypeunknown,
		"update":                AppVulnerabilityTaskMitigationTypeupdate,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := AppVulnerabilityTaskMitigationType(input)
	return &out, nil
}
