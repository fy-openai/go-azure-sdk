package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type ManagedTenantsCredentialUserRegistrationsSummaryOperationPredicate struct {
	 Id *string
	 LastRefreshedDateTime *string
	 MfaAndSsprCapableUserCount *int64
	 MfaConditionalAccessPolicyState *string
	 MfaExcludedUserCount *int64
	 MfaRegisteredUserCount *int64
	 ODataType *string
	 SecurityDefaultsEnabled *bool
	 SsprEnabledUserCount *int64
	 SsprRegisteredUserCount *int64
	 TenantDisplayName *string
	 TenantId *string
	 TenantLicenseType *string
	 TotalUserCount *int64
}

func (p ManagedTenantsCredentialUserRegistrationsSummaryOperationPredicate) Matches(input ManagedTenantsCredentialUserRegistrationsSummary) bool {

	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastRefreshedDateTime != nil && (input.LastRefreshedDateTime == nil || *p.LastRefreshedDateTime != *input.LastRefreshedDateTime) {
	 	return false
	}


	if p.MfaAndSsprCapableUserCount != nil && (input.MfaAndSsprCapableUserCount == nil || *p.MfaAndSsprCapableUserCount != *input.MfaAndSsprCapableUserCount) {
	 	return false
	}


	if p.MfaConditionalAccessPolicyState != nil && (input.MfaConditionalAccessPolicyState == nil || *p.MfaConditionalAccessPolicyState != *input.MfaConditionalAccessPolicyState) {
	 	return false
	}


	if p.MfaExcludedUserCount != nil && (input.MfaExcludedUserCount == nil || *p.MfaExcludedUserCount != *input.MfaExcludedUserCount) {
	 	return false
	}


	if p.MfaRegisteredUserCount != nil && (input.MfaRegisteredUserCount == nil || *p.MfaRegisteredUserCount != *input.MfaRegisteredUserCount) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.SecurityDefaultsEnabled != nil && (input.SecurityDefaultsEnabled == nil || *p.SecurityDefaultsEnabled != *input.SecurityDefaultsEnabled) {
	 	return false
	}


	if p.SsprEnabledUserCount != nil && (input.SsprEnabledUserCount == nil || *p.SsprEnabledUserCount != *input.SsprEnabledUserCount) {
	 	return false
	}


	if p.SsprRegisteredUserCount != nil && (input.SsprRegisteredUserCount == nil || *p.SsprRegisteredUserCount != *input.SsprRegisteredUserCount) {
	 	return false
	}


	if p.TenantDisplayName != nil && (input.TenantDisplayName == nil || *p.TenantDisplayName != *input.TenantDisplayName) {
	 	return false
	}


	if p.TenantId != nil && (input.TenantId == nil || *p.TenantId != *input.TenantId) {
	 	return false
	}


	if p.TenantLicenseType != nil && (input.TenantLicenseType == nil || *p.TenantLicenseType != *input.TenantLicenseType) {
	 	return false
	}


	if p.TotalUserCount != nil && (input.TotalUserCount == nil || *p.TotalUserCount != *input.TotalUserCount) {
	 	return false
	}


	return true
}

