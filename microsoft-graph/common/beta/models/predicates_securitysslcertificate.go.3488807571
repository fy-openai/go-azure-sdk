package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type SecuritySslCertificateOperationPredicate struct {
	 ExpirationDateTime *string
	 Fingerprint *string
	 FirstSeenDateTime *string
	 Id *string
	 IssueDateTime *string
	 LastSeenDateTime *string
	 ODataType *string
	 SerialNumber *string
	 Sha1 *string
}

func (p SecuritySslCertificateOperationPredicate) Matches(input SecuritySslCertificate) bool {

	if p.ExpirationDateTime != nil && (input.ExpirationDateTime == nil || *p.ExpirationDateTime != *input.ExpirationDateTime) {
	 	return false
	}


	if p.Fingerprint != nil && (input.Fingerprint == nil || *p.Fingerprint != *input.Fingerprint) {
	 	return false
	}


	if p.FirstSeenDateTime != nil && (input.FirstSeenDateTime == nil || *p.FirstSeenDateTime != *input.FirstSeenDateTime) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.IssueDateTime != nil && (input.IssueDateTime == nil || *p.IssueDateTime != *input.IssueDateTime) {
	 	return false
	}


	if p.LastSeenDateTime != nil && (input.LastSeenDateTime == nil || *p.LastSeenDateTime != *input.LastSeenDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.SerialNumber != nil && (input.SerialNumber == nil || *p.SerialNumber != *input.SerialNumber) {
	 	return false
	}


	if p.Sha1 != nil && (input.Sha1 == nil || *p.Sha1 != *input.Sha1) {
	 	return false
	}


	return true
}

