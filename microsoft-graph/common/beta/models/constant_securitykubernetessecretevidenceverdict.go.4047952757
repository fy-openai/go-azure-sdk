package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type SecurityKubernetesSecretEvidenceVerdict string

const (
	SecurityKubernetesSecretEvidenceVerdictmalicious SecurityKubernetesSecretEvidenceVerdict = "Malicious"
	SecurityKubernetesSecretEvidenceVerdictnoThreatsFound SecurityKubernetesSecretEvidenceVerdict = "NoThreatsFound"
	SecurityKubernetesSecretEvidenceVerdictsuspicious SecurityKubernetesSecretEvidenceVerdict = "Suspicious"
	SecurityKubernetesSecretEvidenceVerdictunknown SecurityKubernetesSecretEvidenceVerdict = "Unknown"
)


func PossibleValuesForSecurityKubernetesSecretEvidenceVerdict() []string {
	return []string{
		string(SecurityKubernetesSecretEvidenceVerdictmalicious),
string(SecurityKubernetesSecretEvidenceVerdictnoThreatsFound),
string(SecurityKubernetesSecretEvidenceVerdictsuspicious),
string(SecurityKubernetesSecretEvidenceVerdictunknown),
	}
}



func parseSecurityKubernetesSecretEvidenceVerdict(input string) (*SecurityKubernetesSecretEvidenceVerdict, error) {
	vals := map[string]SecurityKubernetesSecretEvidenceVerdict{
		"malicious": SecurityKubernetesSecretEvidenceVerdictmalicious,
"nothreatsfound": SecurityKubernetesSecretEvidenceVerdictnoThreatsFound,
"suspicious": SecurityKubernetesSecretEvidenceVerdictsuspicious,
"unknown": SecurityKubernetesSecretEvidenceVerdictunknown,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := SecurityKubernetesSecretEvidenceVerdict(input)
	return &out, nil
}
