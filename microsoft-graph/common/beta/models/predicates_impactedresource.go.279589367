package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type ImpactedResourceOperationPredicate struct {
	 AddedDateTime *string
	 ApiUrl *string
	 DisplayName *string
	 Id *string
	 LastModifiedBy *string
	 LastModifiedDateTime *string
	 ODataType *string
	 Owner *string
	 PortalUrl *string
	 PostponeUntilDateTime *string
	 Rank *int64
	 RecommendationId *string
	 ResourceType *string
	 SubjectId *string
}

func (p ImpactedResourceOperationPredicate) Matches(input ImpactedResource) bool {

	if p.AddedDateTime != nil && (input.AddedDateTime == nil || *p.AddedDateTime != *input.AddedDateTime) {
	 	return false
	}


	if p.ApiUrl != nil && (input.ApiUrl == nil || *p.ApiUrl != *input.ApiUrl) {
	 	return false
	}


	if p.DisplayName != nil && (input.DisplayName == nil || *p.DisplayName != *input.DisplayName) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastModifiedBy != nil && (input.LastModifiedBy == nil || *p.LastModifiedBy != *input.LastModifiedBy) {
	 	return false
	}


	if p.LastModifiedDateTime != nil && (input.LastModifiedDateTime == nil || *p.LastModifiedDateTime != *input.LastModifiedDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.Owner != nil && (input.Owner == nil || *p.Owner != *input.Owner) {
	 	return false
	}


	if p.PortalUrl != nil && (input.PortalUrl == nil || *p.PortalUrl != *input.PortalUrl) {
	 	return false
	}


	if p.PostponeUntilDateTime != nil && (input.PostponeUntilDateTime == nil || *p.PostponeUntilDateTime != *input.PostponeUntilDateTime) {
	 	return false
	}


	if p.Rank != nil && (input.Rank == nil || *p.Rank != *input.Rank) {
	 	return false
	}


	if p.RecommendationId != nil && (input.RecommendationId == nil || *p.RecommendationId != *input.RecommendationId) {
	 	return false
	}


	if p.ResourceType != nil && (input.ResourceType == nil || *p.ResourceType != *input.ResourceType) {
	 	return false
	}


	if p.SubjectId != nil && (input.SubjectId == nil || *p.SubjectId != *input.SubjectId) {
	 	return false
	}


	return true
}

