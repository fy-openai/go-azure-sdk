package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type WindowsDefenderApplicationControlSupplementalPolicyOperationPredicate struct {
	 Content *string
	 ContentFileName *string
	 CreationDateTime *string
	 Description *string
	 DisplayName *string
	 Id *string
	 LastModifiedDateTime *string
	 ODataType *string
	 Version *string
}

func (p WindowsDefenderApplicationControlSupplementalPolicyOperationPredicate) Matches(input WindowsDefenderApplicationControlSupplementalPolicy) bool {

	if p.Content != nil && (input.Content == nil || *p.Content != *input.Content) {
	 	return false
	}


	if p.ContentFileName != nil && (input.ContentFileName == nil || *p.ContentFileName != *input.ContentFileName) {
	 	return false
	}


	if p.CreationDateTime != nil && (input.CreationDateTime == nil || *p.CreationDateTime != *input.CreationDateTime) {
	 	return false
	}


	if p.Description != nil && (input.Description == nil || *p.Description != *input.Description) {
	 	return false
	}


	if p.DisplayName != nil && (input.DisplayName == nil || *p.DisplayName != *input.DisplayName) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastModifiedDateTime != nil && (input.LastModifiedDateTime == nil || *p.LastModifiedDateTime != *input.LastModifiedDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.Version != nil && (input.Version == nil || *p.Version != *input.Version) {
	 	return false
	}


	return true
}

