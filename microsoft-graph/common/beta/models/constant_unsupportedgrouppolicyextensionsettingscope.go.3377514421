package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type UnsupportedGroupPolicyExtensionSettingScope string

const (
	UnsupportedGroupPolicyExtensionSettingScopedevice UnsupportedGroupPolicyExtensionSettingScope = "Device"
	UnsupportedGroupPolicyExtensionSettingScopeunknown UnsupportedGroupPolicyExtensionSettingScope = "Unknown"
	UnsupportedGroupPolicyExtensionSettingScopeuser UnsupportedGroupPolicyExtensionSettingScope = "User"
)


func PossibleValuesForUnsupportedGroupPolicyExtensionSettingScope() []string {
	return []string{
		string(UnsupportedGroupPolicyExtensionSettingScopedevice),
string(UnsupportedGroupPolicyExtensionSettingScopeunknown),
string(UnsupportedGroupPolicyExtensionSettingScopeuser),
	}
}



func parseUnsupportedGroupPolicyExtensionSettingScope(input string) (*UnsupportedGroupPolicyExtensionSettingScope, error) {
	vals := map[string]UnsupportedGroupPolicyExtensionSettingScope{
		"device": UnsupportedGroupPolicyExtensionSettingScopedevice,
"unknown": UnsupportedGroupPolicyExtensionSettingScopeunknown,
"user": UnsupportedGroupPolicyExtensionSettingScopeuser,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := UnsupportedGroupPolicyExtensionSettingScope(input)
	return &out, nil
}
