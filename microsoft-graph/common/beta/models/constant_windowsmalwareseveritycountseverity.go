package models

import "strings"

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type WindowsMalwareSeverityCountSeverity string

const (
	WindowsMalwareSeverityCountSeverityhigh     WindowsMalwareSeverityCountSeverity = "High"
	WindowsMalwareSeverityCountSeveritylow      WindowsMalwareSeverityCountSeverity = "Low"
	WindowsMalwareSeverityCountSeveritymoderate WindowsMalwareSeverityCountSeverity = "Moderate"
	WindowsMalwareSeverityCountSeveritysevere   WindowsMalwareSeverityCountSeverity = "Severe"
	WindowsMalwareSeverityCountSeverityunknown  WindowsMalwareSeverityCountSeverity = "Unknown"
)

func PossibleValuesForWindowsMalwareSeverityCountSeverity() []string {
	return []string{
		string(WindowsMalwareSeverityCountSeverityhigh),
		string(WindowsMalwareSeverityCountSeveritylow),
		string(WindowsMalwareSeverityCountSeveritymoderate),
		string(WindowsMalwareSeverityCountSeveritysevere),
		string(WindowsMalwareSeverityCountSeverityunknown),
	}
}

func parseWindowsMalwareSeverityCountSeverity(input string) (*WindowsMalwareSeverityCountSeverity, error) {
	vals := map[string]WindowsMalwareSeverityCountSeverity{
		"high":     WindowsMalwareSeverityCountSeverityhigh,
		"low":      WindowsMalwareSeverityCountSeveritylow,
		"moderate": WindowsMalwareSeverityCountSeveritymoderate,
		"severe":   WindowsMalwareSeverityCountSeveritysevere,
		"unknown":  WindowsMalwareSeverityCountSeverityunknown,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := WindowsMalwareSeverityCountSeverity(input)
	return &out, nil
}
