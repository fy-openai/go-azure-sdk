package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type UserExperienceAnalyticsNotAutopilotReadyDeviceOperationPredicate struct {
	 AutoPilotProfileAssigned *bool
	 AutoPilotRegistered *bool
	 AzureAdJoinType *string
	 AzureAdRegistered *bool
	 DeviceName *string
	 Id *string
	 ManagedBy *string
	 Manufacturer *string
	 Model *string
	 ODataType *string
	 SerialNumber *string
}

func (p UserExperienceAnalyticsNotAutopilotReadyDeviceOperationPredicate) Matches(input UserExperienceAnalyticsNotAutopilotReadyDevice) bool {

	if p.AutoPilotProfileAssigned != nil && (input.AutoPilotProfileAssigned == nil || *p.AutoPilotProfileAssigned != *input.AutoPilotProfileAssigned) {
	 	return false
	}


	if p.AutoPilotRegistered != nil && (input.AutoPilotRegistered == nil || *p.AutoPilotRegistered != *input.AutoPilotRegistered) {
	 	return false
	}


	if p.AzureAdJoinType != nil && (input.AzureAdJoinType == nil || *p.AzureAdJoinType != *input.AzureAdJoinType) {
	 	return false
	}


	if p.AzureAdRegistered != nil && (input.AzureAdRegistered == nil || *p.AzureAdRegistered != *input.AzureAdRegistered) {
	 	return false
	}


	if p.DeviceName != nil && (input.DeviceName == nil || *p.DeviceName != *input.DeviceName) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.ManagedBy != nil && (input.ManagedBy == nil || *p.ManagedBy != *input.ManagedBy) {
	 	return false
	}


	if p.Manufacturer != nil && (input.Manufacturer == nil || *p.Manufacturer != *input.Manufacturer) {
	 	return false
	}


	if p.Model != nil && (input.Model == nil || *p.Model != *input.Model) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.SerialNumber != nil && (input.SerialNumber == nil || *p.SerialNumber != *input.SerialNumber) {
	 	return false
	}


	return true
}

