package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility string

const (
	DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitynone DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility = "None"
	DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitysettingsCatalog DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility = "SettingsCatalog"
	DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitytemplate DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility = "Template"
)


func PossibleValuesForDeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility() []string {
	return []string{
		string(DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitynone),
string(DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitysettingsCatalog),
string(DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitytemplate),
	}
}



func parseDeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility(input string) (*DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility, error) {
	vals := map[string]DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility{
		"none": DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitynone,
"settingscatalog": DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitysettingsCatalog,
"template": DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibilitytemplate,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := DeviceManagementConfigurationSimpleSettingCollectionDefinitionVisibility(input)
	return &out, nil
}
