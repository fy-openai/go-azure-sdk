package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type ManagedTenantsManagedTenantAlertRuleOperationPredicate struct {
	 AlertDisplayName *string
	 AlertTTL *int64
	 CreatedByUserId *string
	 CreatedDateTime *string
	 Description *string
	 DisplayName *string
	 Id *string
	 LastActionByUserId *string
	 LastActionDateTime *string
	 LastRunDateTime *string
	 ODataType *string
}

func (p ManagedTenantsManagedTenantAlertRuleOperationPredicate) Matches(input ManagedTenantsManagedTenantAlertRule) bool {

	if p.AlertDisplayName != nil && (input.AlertDisplayName == nil || *p.AlertDisplayName != *input.AlertDisplayName) {
	 	return false
	}


	if p.AlertTTL != nil && (input.AlertTTL == nil || *p.AlertTTL != *input.AlertTTL) {
	 	return false
	}


	if p.CreatedByUserId != nil && (input.CreatedByUserId == nil || *p.CreatedByUserId != *input.CreatedByUserId) {
	 	return false
	}


	if p.CreatedDateTime != nil && (input.CreatedDateTime == nil || *p.CreatedDateTime != *input.CreatedDateTime) {
	 	return false
	}


	if p.Description != nil && (input.Description == nil || *p.Description != *input.Description) {
	 	return false
	}


	if p.DisplayName != nil && (input.DisplayName == nil || *p.DisplayName != *input.DisplayName) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastActionByUserId != nil && (input.LastActionByUserId == nil || *p.LastActionByUserId != *input.LastActionByUserId) {
	 	return false
	}


	if p.LastActionDateTime != nil && (input.LastActionDateTime == nil || *p.LastActionDateTime != *input.LastActionDateTime) {
	 	return false
	}


	if p.LastRunDateTime != nil && (input.LastRunDateTime == nil || *p.LastRunDateTime != *input.LastRunDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	return true
}

