package models

import "strings"

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type AppVulnerabilityTaskStatus string

const (
	AppVulnerabilityTaskStatusactive    AppVulnerabilityTaskStatus = "Active"
	AppVulnerabilityTaskStatuscompleted AppVulnerabilityTaskStatus = "Completed"
	AppVulnerabilityTaskStatuspending   AppVulnerabilityTaskStatus = "Pending"
	AppVulnerabilityTaskStatusrejected  AppVulnerabilityTaskStatus = "Rejected"
	AppVulnerabilityTaskStatusunknown   AppVulnerabilityTaskStatus = "Unknown"
)

func PossibleValuesForAppVulnerabilityTaskStatus() []string {
	return []string{
		string(AppVulnerabilityTaskStatusactive),
		string(AppVulnerabilityTaskStatuscompleted),
		string(AppVulnerabilityTaskStatuspending),
		string(AppVulnerabilityTaskStatusrejected),
		string(AppVulnerabilityTaskStatusunknown),
	}
}

func parseAppVulnerabilityTaskStatus(input string) (*AppVulnerabilityTaskStatus, error) {
	vals := map[string]AppVulnerabilityTaskStatus{
		"active":    AppVulnerabilityTaskStatusactive,
		"completed": AppVulnerabilityTaskStatuscompleted,
		"pending":   AppVulnerabilityTaskStatuspending,
		"rejected":  AppVulnerabilityTaskStatusrejected,
		"unknown":   AppVulnerabilityTaskStatusunknown,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := AppVulnerabilityTaskStatus(input)
	return &out, nil
}
