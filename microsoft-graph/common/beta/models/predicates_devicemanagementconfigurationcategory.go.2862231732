package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type DeviceManagementConfigurationCategoryOperationPredicate struct {
	 CategoryDescription *string
	 Description *string
	 DisplayName *string
	 HelpText *string
	 Id *string
	 Name *string
	 ODataType *string
	 ParentCategoryId *string
	 RootCategoryId *string
}

func (p DeviceManagementConfigurationCategoryOperationPredicate) Matches(input DeviceManagementConfigurationCategory) bool {

	if p.CategoryDescription != nil && (input.CategoryDescription == nil || *p.CategoryDescription != *input.CategoryDescription) {
	 	return false
	}


	if p.Description != nil && (input.Description == nil || *p.Description != *input.Description) {
	 	return false
	}


	if p.DisplayName != nil && (input.DisplayName == nil || *p.DisplayName != *input.DisplayName) {
	 	return false
	}


	if p.HelpText != nil && (input.HelpText == nil || *p.HelpText != *input.HelpText) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.Name != nil && (input.Name == nil || *p.Name != *input.Name) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.ParentCategoryId != nil && (input.ParentCategoryId == nil || *p.ParentCategoryId != *input.ParentCategoryId) {
	 	return false
	}


	if p.RootCategoryId != nil && (input.RootCategoryId == nil || *p.RootCategoryId != *input.RootCategoryId) {
	 	return false
	}


	return true
}

