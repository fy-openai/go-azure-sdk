package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type ManagedTenantsManagementTemplateStepVersionOperationPredicate struct {
	 ContentMarkdown *string
	 CreatedByUserId *string
	 CreatedDateTime *string
	 Id *string
	 LastActionByUserId *string
	 LastActionDateTime *string
	 Name *string
	 ODataType *string
	 Version *int64
	 VersionInformation *string
}

func (p ManagedTenantsManagementTemplateStepVersionOperationPredicate) Matches(input ManagedTenantsManagementTemplateStepVersion) bool {

	if p.ContentMarkdown != nil && (input.ContentMarkdown == nil || *p.ContentMarkdown != *input.ContentMarkdown) {
	 	return false
	}


	if p.CreatedByUserId != nil && (input.CreatedByUserId == nil || *p.CreatedByUserId != *input.CreatedByUserId) {
	 	return false
	}


	if p.CreatedDateTime != nil && (input.CreatedDateTime == nil || *p.CreatedDateTime != *input.CreatedDateTime) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastActionByUserId != nil && (input.LastActionByUserId == nil || *p.LastActionByUserId != *input.LastActionByUserId) {
	 	return false
	}


	if p.LastActionDateTime != nil && (input.LastActionDateTime == nil || *p.LastActionDateTime != *input.LastActionDateTime) {
	 	return false
	}


	if p.Name != nil && (input.Name == nil || *p.Name != *input.Name) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.Version != nil && (input.Version == nil || *p.Version != *input.Version) {
	 	return false
	}


	if p.VersionInformation != nil && (input.VersionInformation == nil || *p.VersionInformation != *input.VersionInformation) {
	 	return false
	}


	return true
}

