package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type DeviceManagementConfigurationPolicyTemplateOperationPredicate struct {
	 AllowUnmanagedSettings *bool
	 BaseId *string
	 Description *string
	 DisplayName *string
	 DisplayVersion *string
	 Id *string
	 ODataType *string
	 SettingTemplateCount *int64
	 Version *int64
}

func (p DeviceManagementConfigurationPolicyTemplateOperationPredicate) Matches(input DeviceManagementConfigurationPolicyTemplate) bool {

	if p.AllowUnmanagedSettings != nil && (input.AllowUnmanagedSettings == nil || *p.AllowUnmanagedSettings != *input.AllowUnmanagedSettings) {
	 	return false
	}


	if p.BaseId != nil && (input.BaseId == nil || *p.BaseId != *input.BaseId) {
	 	return false
	}


	if p.Description != nil && (input.Description == nil || *p.Description != *input.Description) {
	 	return false
	}


	if p.DisplayName != nil && (input.DisplayName == nil || *p.DisplayName != *input.DisplayName) {
	 	return false
	}


	if p.DisplayVersion != nil && (input.DisplayVersion == nil || *p.DisplayVersion != *input.DisplayVersion) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.SettingTemplateCount != nil && (input.SettingTemplateCount == nil || *p.SettingTemplateCount != *input.SettingTemplateCount) {
	 	return false
	}


	if p.Version != nil && (input.Version == nil || *p.Version != *input.Version) {
	 	return false
	}


	return true
}

