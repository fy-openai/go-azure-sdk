package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type RetrieveRemoteHelpSessionResponseOperationPredicate struct {
	 AcsGroupId *string
	 AcsHelperUserId *string
	 AcsHelperUserToken *string
	 AcsSharerUserId *string
	 DeviceName *string
	 ODataType *string
	 PubSubGroupId *string
	 PubSubHelperAccessUri *string
	 SessionExpirationDateTime *string
	 SessionKey *string
}

func (p RetrieveRemoteHelpSessionResponseOperationPredicate) Matches(input RetrieveRemoteHelpSessionResponse) bool {

	if p.AcsGroupId != nil && (input.AcsGroupId == nil || *p.AcsGroupId != *input.AcsGroupId) {
	 	return false
	}


	if p.AcsHelperUserId != nil && (input.AcsHelperUserId == nil || *p.AcsHelperUserId != *input.AcsHelperUserId) {
	 	return false
	}


	if p.AcsHelperUserToken != nil && (input.AcsHelperUserToken == nil || *p.AcsHelperUserToken != *input.AcsHelperUserToken) {
	 	return false
	}


	if p.AcsSharerUserId != nil && (input.AcsSharerUserId == nil || *p.AcsSharerUserId != *input.AcsSharerUserId) {
	 	return false
	}


	if p.DeviceName != nil && (input.DeviceName == nil || *p.DeviceName != *input.DeviceName) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.PubSubGroupId != nil && (input.PubSubGroupId == nil || *p.PubSubGroupId != *input.PubSubGroupId) {
	 	return false
	}


	if p.PubSubHelperAccessUri != nil && (input.PubSubHelperAccessUri == nil || *p.PubSubHelperAccessUri != *input.PubSubHelperAccessUri) {
	 	return false
	}


	if p.SessionExpirationDateTime != nil && (input.SessionExpirationDateTime == nil || *p.SessionExpirationDateTime != *input.SessionExpirationDateTime) {
	 	return false
	}


	if p.SessionKey != nil && (input.SessionKey == nil || *p.SessionKey != *input.SessionKey) {
	 	return false
	}


	return true
}

