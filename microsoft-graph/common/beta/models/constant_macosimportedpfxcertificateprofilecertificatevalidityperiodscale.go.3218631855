package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale string

const (
	MacOSImportedPFXCertificateProfileCertificateValidityPeriodScaledays MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale = "Days"
	MacOSImportedPFXCertificateProfileCertificateValidityPeriodScalemonths MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale = "Months"
	MacOSImportedPFXCertificateProfileCertificateValidityPeriodScaleyears MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale = "Years"
)


func PossibleValuesForMacOSImportedPFXCertificateProfileCertificateValidityPeriodScale() []string {
	return []string{
		string(MacOSImportedPFXCertificateProfileCertificateValidityPeriodScaledays),
string(MacOSImportedPFXCertificateProfileCertificateValidityPeriodScalemonths),
string(MacOSImportedPFXCertificateProfileCertificateValidityPeriodScaleyears),
	}
}



func parseMacOSImportedPFXCertificateProfileCertificateValidityPeriodScale(input string) (*MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale, error) {
	vals := map[string]MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale{
		"days": MacOSImportedPFXCertificateProfileCertificateValidityPeriodScaledays,
"months": MacOSImportedPFXCertificateProfileCertificateValidityPeriodScalemonths,
"years": MacOSImportedPFXCertificateProfileCertificateValidityPeriodScaleyears,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := MacOSImportedPFXCertificateProfileCertificateValidityPeriodScale(input)
	return &out, nil
}
