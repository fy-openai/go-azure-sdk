package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type DeviceInstallStateOperationPredicate struct {
	 DeviceId *string
	 DeviceName *string
	 ErrorCode *string
	 Id *string
	 LastSyncDateTime *string
	 ODataType *string
	 OsDescription *string
	 OsVersion *string
	 UserName *string
}

func (p DeviceInstallStateOperationPredicate) Matches(input DeviceInstallState) bool {

	if p.DeviceId != nil && (input.DeviceId == nil || *p.DeviceId != *input.DeviceId) {
	 	return false
	}


	if p.DeviceName != nil && (input.DeviceName == nil || *p.DeviceName != *input.DeviceName) {
	 	return false
	}


	if p.ErrorCode != nil && (input.ErrorCode == nil || *p.ErrorCode != *input.ErrorCode) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastSyncDateTime != nil && (input.LastSyncDateTime == nil || *p.LastSyncDateTime != *input.LastSyncDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.OsDescription != nil && (input.OsDescription == nil || *p.OsDescription != *input.OsDescription) {
	 	return false
	}


	if p.OsVersion != nil && (input.OsVersion == nil || *p.OsVersion != *input.OsVersion) {
	 	return false
	}


	if p.UserName != nil && (input.UserName == nil || *p.UserName != *input.UserName) {
	 	return false
	}


	return true
}

