package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type SecurityVulnerabilityOperationPredicate struct {
	 ActiveExploitsObserved *bool
	 CreatedDateTime *string
	 ExploitsAvailable *bool
	 HasChatter *bool
	 Id *string
	 LastModifiedDateTime *string
	 ODataType *string
	 PriorityScore *int64
	 PublishedDateTime *string
}

func (p SecurityVulnerabilityOperationPredicate) Matches(input SecurityVulnerability) bool {

	if p.ActiveExploitsObserved != nil && (input.ActiveExploitsObserved == nil || *p.ActiveExploitsObserved != *input.ActiveExploitsObserved) {
	 	return false
	}


	if p.CreatedDateTime != nil && (input.CreatedDateTime == nil || *p.CreatedDateTime != *input.CreatedDateTime) {
	 	return false
	}


	if p.ExploitsAvailable != nil && (input.ExploitsAvailable == nil || *p.ExploitsAvailable != *input.ExploitsAvailable) {
	 	return false
	}


	if p.HasChatter != nil && (input.HasChatter == nil || *p.HasChatter != *input.HasChatter) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastModifiedDateTime != nil && (input.LastModifiedDateTime == nil || *p.LastModifiedDateTime != *input.LastModifiedDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.PriorityScore != nil && (input.PriorityScore == nil || *p.PriorityScore != *input.PriorityScore) {
	 	return false
	}


	if p.PublishedDateTime != nil && (input.PublishedDateTime == nil || *p.PublishedDateTime != *input.PublishedDateTime) {
	 	return false
	}


	return true
}

