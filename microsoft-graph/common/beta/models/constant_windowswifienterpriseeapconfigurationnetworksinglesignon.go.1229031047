package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn string

const (
	WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOndisabled WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn = "Disabled"
	WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOnpostlogon WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn = "Postlogon"
	WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOnprelogon WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn = "Prelogon"
)


func PossibleValuesForWindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn() []string {
	return []string{
		string(WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOndisabled),
string(WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOnpostlogon),
string(WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOnprelogon),
	}
}



func parseWindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn(input string) (*WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn, error) {
	vals := map[string]WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn{
		"disabled": WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOndisabled,
"postlogon": WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOnpostlogon,
"prelogon": WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOnprelogon,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := WindowsWifiEnterpriseEAPConfigurationNetworkSingleSignOn(input)
	return &out, nil
}
