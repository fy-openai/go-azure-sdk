package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type WindowsPhoneXAPOperationPredicate struct {
	 CommittedContentVersion *string
	 CreatedDateTime *string
	 DependentAppCount *int64
	 Description *string
	 Developer *string
	 DisplayName *string
	 FileName *string
	 Id *string
	 IdentityVersion *string
	 InformationUrl *string
	 IsAssigned *bool
	 IsFeatured *bool
	 LastModifiedDateTime *string
	 Notes *string
	 ODataType *string
	 Owner *string
	 PrivacyInformationUrl *string
	 ProductIdentifier *string
	 Publisher *string
	 Size *int64
	 SupersededAppCount *int64
	 SupersedingAppCount *int64
	 UploadState *int64
}

func (p WindowsPhoneXAPOperationPredicate) Matches(input WindowsPhoneXAP) bool {

	if p.CommittedContentVersion != nil && (input.CommittedContentVersion == nil || *p.CommittedContentVersion != *input.CommittedContentVersion) {
	 	return false
	}


	if p.CreatedDateTime != nil && (input.CreatedDateTime == nil || *p.CreatedDateTime != *input.CreatedDateTime) {
	 	return false
	}


	if p.DependentAppCount != nil && (input.DependentAppCount == nil || *p.DependentAppCount != *input.DependentAppCount) {
	 	return false
	}


	if p.Description != nil && (input.Description == nil || *p.Description != *input.Description) {
	 	return false
	}


	if p.Developer != nil && (input.Developer == nil || *p.Developer != *input.Developer) {
	 	return false
	}


	if p.DisplayName != nil && (input.DisplayName == nil || *p.DisplayName != *input.DisplayName) {
	 	return false
	}


	if p.FileName != nil && (input.FileName == nil || *p.FileName != *input.FileName) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.IdentityVersion != nil && (input.IdentityVersion == nil || *p.IdentityVersion != *input.IdentityVersion) {
	 	return false
	}


	if p.InformationUrl != nil && (input.InformationUrl == nil || *p.InformationUrl != *input.InformationUrl) {
	 	return false
	}


	if p.IsAssigned != nil && (input.IsAssigned == nil || *p.IsAssigned != *input.IsAssigned) {
	 	return false
	}


	if p.IsFeatured != nil && (input.IsFeatured == nil || *p.IsFeatured != *input.IsFeatured) {
	 	return false
	}


	if p.LastModifiedDateTime != nil && (input.LastModifiedDateTime == nil || *p.LastModifiedDateTime != *input.LastModifiedDateTime) {
	 	return false
	}


	if p.Notes != nil && (input.Notes == nil || *p.Notes != *input.Notes) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.Owner != nil && (input.Owner == nil || *p.Owner != *input.Owner) {
	 	return false
	}


	if p.PrivacyInformationUrl != nil && (input.PrivacyInformationUrl == nil || *p.PrivacyInformationUrl != *input.PrivacyInformationUrl) {
	 	return false
	}


	if p.ProductIdentifier != nil && (input.ProductIdentifier == nil || *p.ProductIdentifier != *input.ProductIdentifier) {
	 	return false
	}


	if p.Publisher != nil && (input.Publisher == nil || *p.Publisher != *input.Publisher) {
	 	return false
	}


	if p.Size != nil && (input.Size == nil || *p.Size != *input.Size) {
	 	return false
	}


	if p.SupersededAppCount != nil && (input.SupersededAppCount == nil || *p.SupersededAppCount != *input.SupersededAppCount) {
	 	return false
	}


	if p.SupersedingAppCount != nil && (input.SupersedingAppCount == nil || *p.SupersedingAppCount != *input.SupersedingAppCount) {
	 	return false
	}


	if p.UploadState != nil && (input.UploadState == nil || *p.UploadState != *input.UploadState) {
	 	return false
	}


	return true
}

