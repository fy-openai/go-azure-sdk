package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type GovernanceRoleSettingOperationPredicate struct {
	 Id *string
	 IsDefault *bool
	 LastUpdatedBy *string
	 LastUpdatedDateTime *string
	 ODataType *string
	 ResourceId *string
	 RoleDefinitionId *string
}

func (p GovernanceRoleSettingOperationPredicate) Matches(input GovernanceRoleSetting) bool {

	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.IsDefault != nil && (input.IsDefault == nil || *p.IsDefault != *input.IsDefault) {
	 	return false
	}


	if p.LastUpdatedBy != nil && (input.LastUpdatedBy == nil || *p.LastUpdatedBy != *input.LastUpdatedBy) {
	 	return false
	}


	if p.LastUpdatedDateTime != nil && (input.LastUpdatedDateTime == nil || *p.LastUpdatedDateTime != *input.LastUpdatedDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.ResourceId != nil && (input.ResourceId == nil || *p.ResourceId != *input.ResourceId) {
	 	return false
	}


	if p.RoleDefinitionId != nil && (input.RoleDefinitionId == nil || *p.RoleDefinitionId != *input.RoleDefinitionId) {
	 	return false
	}


	return true
}

