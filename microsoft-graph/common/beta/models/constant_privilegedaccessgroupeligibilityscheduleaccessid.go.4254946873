package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type PrivilegedAccessGroupEligibilityScheduleAccessId string

const (
	PrivilegedAccessGroupEligibilityScheduleAccessIdmember PrivilegedAccessGroupEligibilityScheduleAccessId = "Member"
	PrivilegedAccessGroupEligibilityScheduleAccessIdowner PrivilegedAccessGroupEligibilityScheduleAccessId = "Owner"
)


func PossibleValuesForPrivilegedAccessGroupEligibilityScheduleAccessId() []string {
	return []string{
		string(PrivilegedAccessGroupEligibilityScheduleAccessIdmember),
string(PrivilegedAccessGroupEligibilityScheduleAccessIdowner),
	}
}



func parsePrivilegedAccessGroupEligibilityScheduleAccessId(input string) (*PrivilegedAccessGroupEligibilityScheduleAccessId, error) {
	vals := map[string]PrivilegedAccessGroupEligibilityScheduleAccessId{
		"member": PrivilegedAccessGroupEligibilityScheduleAccessIdmember,
"owner": PrivilegedAccessGroupEligibilityScheduleAccessIdowner,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := PrivilegedAccessGroupEligibilityScheduleAccessId(input)
	return &out, nil
}
