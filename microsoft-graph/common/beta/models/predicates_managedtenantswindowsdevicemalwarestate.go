package models

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type ManagedTenantsWindowsDeviceMalwareStateOperationPredicate struct {
	AdditionalInformationUrl *string
	DetectionCount           *int64
	DeviceDeleted            *bool
	Id                       *string
	InitialDetectionDateTime *string
	LastRefreshedDateTime    *string
	LastStateChangeDateTime  *string
	MalwareCategory          *string
	MalwareDisplayName       *string
	MalwareExecutionState    *string
	MalwareId                *string
	MalwareSeverity          *string
	MalwareThreatState       *string
	ManagedDeviceId          *string
	ManagedDeviceName        *string
	ODataType                *string
	TenantDisplayName        *string
	TenantId                 *string
}

func (p ManagedTenantsWindowsDeviceMalwareStateOperationPredicate) Matches(input ManagedTenantsWindowsDeviceMalwareState) bool {

	if p.AdditionalInformationUrl != nil && (input.AdditionalInformationUrl == nil || *p.AdditionalInformationUrl != *input.AdditionalInformationUrl) {
		return false
	}

	if p.DetectionCount != nil && (input.DetectionCount == nil || *p.DetectionCount != *input.DetectionCount) {
		return false
	}

	if p.DeviceDeleted != nil && (input.DeviceDeleted == nil || *p.DeviceDeleted != *input.DeviceDeleted) {
		return false
	}

	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
		return false
	}

	if p.InitialDetectionDateTime != nil && (input.InitialDetectionDateTime == nil || *p.InitialDetectionDateTime != *input.InitialDetectionDateTime) {
		return false
	}

	if p.LastRefreshedDateTime != nil && (input.LastRefreshedDateTime == nil || *p.LastRefreshedDateTime != *input.LastRefreshedDateTime) {
		return false
	}

	if p.LastStateChangeDateTime != nil && (input.LastStateChangeDateTime == nil || *p.LastStateChangeDateTime != *input.LastStateChangeDateTime) {
		return false
	}

	if p.MalwareCategory != nil && (input.MalwareCategory == nil || *p.MalwareCategory != *input.MalwareCategory) {
		return false
	}

	if p.MalwareDisplayName != nil && (input.MalwareDisplayName == nil || *p.MalwareDisplayName != *input.MalwareDisplayName) {
		return false
	}

	if p.MalwareExecutionState != nil && (input.MalwareExecutionState == nil || *p.MalwareExecutionState != *input.MalwareExecutionState) {
		return false
	}

	if p.MalwareId != nil && (input.MalwareId == nil || *p.MalwareId != *input.MalwareId) {
		return false
	}

	if p.MalwareSeverity != nil && (input.MalwareSeverity == nil || *p.MalwareSeverity != *input.MalwareSeverity) {
		return false
	}

	if p.MalwareThreatState != nil && (input.MalwareThreatState == nil || *p.MalwareThreatState != *input.MalwareThreatState) {
		return false
	}

	if p.ManagedDeviceId != nil && (input.ManagedDeviceId == nil || *p.ManagedDeviceId != *input.ManagedDeviceId) {
		return false
	}

	if p.ManagedDeviceName != nil && (input.ManagedDeviceName == nil || *p.ManagedDeviceName != *input.ManagedDeviceName) {
		return false
	}

	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
		return false
	}

	if p.TenantDisplayName != nil && (input.TenantDisplayName == nil || *p.TenantDisplayName != *input.TenantDisplayName) {
		return false
	}

	if p.TenantId != nil && (input.TenantId == nil || *p.TenantId != *input.TenantId) {
		return false
	}

	return true
}
