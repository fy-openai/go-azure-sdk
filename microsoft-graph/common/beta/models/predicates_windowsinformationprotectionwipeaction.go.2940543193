package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type WindowsInformationProtectionWipeActionOperationPredicate struct {
	 Id *string
	 LastCheckInDateTime *string
	 ODataType *string
	 TargetedDeviceMacAddress *string
	 TargetedDeviceName *string
	 TargetedDeviceRegistrationId *string
	 TargetedUserId *string
}

func (p WindowsInformationProtectionWipeActionOperationPredicate) Matches(input WindowsInformationProtectionWipeAction) bool {

	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.LastCheckInDateTime != nil && (input.LastCheckInDateTime == nil || *p.LastCheckInDateTime != *input.LastCheckInDateTime) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.TargetedDeviceMacAddress != nil && (input.TargetedDeviceMacAddress == nil || *p.TargetedDeviceMacAddress != *input.TargetedDeviceMacAddress) {
	 	return false
	}


	if p.TargetedDeviceName != nil && (input.TargetedDeviceName == nil || *p.TargetedDeviceName != *input.TargetedDeviceName) {
	 	return false
	}


	if p.TargetedDeviceRegistrationId != nil && (input.TargetedDeviceRegistrationId == nil || *p.TargetedDeviceRegistrationId != *input.TargetedDeviceRegistrationId) {
	 	return false
	}


	if p.TargetedUserId != nil && (input.TargetedUserId == nil || *p.TargetedUserId != *input.TargetedUserId) {
	 	return false
	}


	return true
}

