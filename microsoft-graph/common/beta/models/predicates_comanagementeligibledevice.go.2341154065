package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type ComanagementEligibleDeviceOperationPredicate struct {
	 DeviceName *string
	 EntitySource *int64
	 Id *string
	 Manufacturer *string
	 MdmStatus *string
	 Model *string
	 ODataType *string
	 OsDescription *string
	 OsVersion *string
	 ReferenceId *string
	 SerialNumber *string
	 Upn *string
	 UserEmail *string
	 UserId *string
	 UserName *string
}

func (p ComanagementEligibleDeviceOperationPredicate) Matches(input ComanagementEligibleDevice) bool {

	if p.DeviceName != nil && (input.DeviceName == nil || *p.DeviceName != *input.DeviceName) {
	 	return false
	}


	if p.EntitySource != nil && (input.EntitySource == nil || *p.EntitySource != *input.EntitySource) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.Manufacturer != nil && (input.Manufacturer == nil || *p.Manufacturer != *input.Manufacturer) {
	 	return false
	}


	if p.MdmStatus != nil && (input.MdmStatus == nil || *p.MdmStatus != *input.MdmStatus) {
	 	return false
	}


	if p.Model != nil && (input.Model == nil || *p.Model != *input.Model) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.OsDescription != nil && (input.OsDescription == nil || *p.OsDescription != *input.OsDescription) {
	 	return false
	}


	if p.OsVersion != nil && (input.OsVersion == nil || *p.OsVersion != *input.OsVersion) {
	 	return false
	}


	if p.ReferenceId != nil && (input.ReferenceId == nil || *p.ReferenceId != *input.ReferenceId) {
	 	return false
	}


	if p.SerialNumber != nil && (input.SerialNumber == nil || *p.SerialNumber != *input.SerialNumber) {
	 	return false
	}


	if p.Upn != nil && (input.Upn == nil || *p.Upn != *input.Upn) {
	 	return false
	}


	if p.UserEmail != nil && (input.UserEmail == nil || *p.UserEmail != *input.UserEmail) {
	 	return false
	}


	if p.UserId != nil && (input.UserId == nil || *p.UserId != *input.UserId) {
	 	return false
	}


	if p.UserName != nil && (input.UserName == nil || *p.UserName != *input.UserName) {
	 	return false
	}


	return true
}

