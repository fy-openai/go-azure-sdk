package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type DeviceManagementTemplateTemplateSubtype string

const (
	DeviceManagementTemplateTemplateSubtypeaccountProtection DeviceManagementTemplateTemplateSubtype = "AccountProtection"
	DeviceManagementTemplateTemplateSubtypeantivirus DeviceManagementTemplateTemplateSubtype = "Antivirus"
	DeviceManagementTemplateTemplateSubtypeattackSurfaceReduction DeviceManagementTemplateTemplateSubtype = "AttackSurfaceReduction"
	DeviceManagementTemplateTemplateSubtypediskEncryption DeviceManagementTemplateTemplateSubtype = "DiskEncryption"
	DeviceManagementTemplateTemplateSubtypeendpointDetectionReponse DeviceManagementTemplateTemplateSubtype = "EndpointDetectionReponse"
	DeviceManagementTemplateTemplateSubtypefirewall DeviceManagementTemplateTemplateSubtype = "Firewall"
	DeviceManagementTemplateTemplateSubtypefirewallSharedAppList DeviceManagementTemplateTemplateSubtype = "FirewallSharedAppList"
	DeviceManagementTemplateTemplateSubtypefirewallSharedIpList DeviceManagementTemplateTemplateSubtype = "FirewallSharedIpList"
	DeviceManagementTemplateTemplateSubtypefirewallSharedPortlist DeviceManagementTemplateTemplateSubtype = "FirewallSharedPortlist"
	DeviceManagementTemplateTemplateSubtypenone DeviceManagementTemplateTemplateSubtype = "None"
)


func PossibleValuesForDeviceManagementTemplateTemplateSubtype() []string {
	return []string{
		string(DeviceManagementTemplateTemplateSubtypeaccountProtection),
string(DeviceManagementTemplateTemplateSubtypeantivirus),
string(DeviceManagementTemplateTemplateSubtypeattackSurfaceReduction),
string(DeviceManagementTemplateTemplateSubtypediskEncryption),
string(DeviceManagementTemplateTemplateSubtypeendpointDetectionReponse),
string(DeviceManagementTemplateTemplateSubtypefirewall),
string(DeviceManagementTemplateTemplateSubtypefirewallSharedAppList),
string(DeviceManagementTemplateTemplateSubtypefirewallSharedIpList),
string(DeviceManagementTemplateTemplateSubtypefirewallSharedPortlist),
string(DeviceManagementTemplateTemplateSubtypenone),
	}
}



func parseDeviceManagementTemplateTemplateSubtype(input string) (*DeviceManagementTemplateTemplateSubtype, error) {
	vals := map[string]DeviceManagementTemplateTemplateSubtype{
		"accountprotection": DeviceManagementTemplateTemplateSubtypeaccountProtection,
"antivirus": DeviceManagementTemplateTemplateSubtypeantivirus,
"attacksurfacereduction": DeviceManagementTemplateTemplateSubtypeattackSurfaceReduction,
"diskencryption": DeviceManagementTemplateTemplateSubtypediskEncryption,
"endpointdetectionreponse": DeviceManagementTemplateTemplateSubtypeendpointDetectionReponse,
"firewall": DeviceManagementTemplateTemplateSubtypefirewall,
"firewallsharedapplist": DeviceManagementTemplateTemplateSubtypefirewallSharedAppList,
"firewallsharediplist": DeviceManagementTemplateTemplateSubtypefirewallSharedIpList,
"firewallsharedportlist": DeviceManagementTemplateTemplateSubtypefirewallSharedPortlist,
"none": DeviceManagementTemplateTemplateSubtypenone,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := DeviceManagementTemplateTemplateSubtype(input)
	return &out, nil
}
