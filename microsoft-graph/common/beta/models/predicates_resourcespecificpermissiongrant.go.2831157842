package models


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

 
type ResourceSpecificPermissionGrantOperationPredicate struct {
	 ClientAppId *string
	 ClientId *string
	 DeletedDateTime *string
	 Id *string
	 ODataType *string
	 Permission *string
	 PermissionType *string
	 ResourceAppId *string
}

func (p ResourceSpecificPermissionGrantOperationPredicate) Matches(input ResourceSpecificPermissionGrant) bool {

	if p.ClientAppId != nil && (input.ClientAppId == nil || *p.ClientAppId != *input.ClientAppId) {
	 	return false
	}


	if p.ClientId != nil && (input.ClientId == nil || *p.ClientId != *input.ClientId) {
	 	return false
	}


	if p.DeletedDateTime != nil && (input.DeletedDateTime == nil || *p.DeletedDateTime != *input.DeletedDateTime) {
	 	return false
	}


	if p.Id != nil && (input.Id == nil || *p.Id != *input.Id) {
	 	return false
	}


	if p.ODataType != nil && (input.ODataType == nil || *p.ODataType != *input.ODataType) {
	 	return false
	}


	if p.Permission != nil && (input.Permission == nil || *p.Permission != *input.Permission) {
	 	return false
	}


	if p.PermissionType != nil && (input.PermissionType == nil || *p.PermissionType != *input.PermissionType) {
	 	return false
	}


	if p.ResourceAppId != nil && (input.ResourceAppId == nil || *p.ResourceAppId != *input.ResourceAppId) {
	 	return false
	}


	return true
}

