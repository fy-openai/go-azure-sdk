package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage string

const (
	WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsageallowed WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage = "Allowed"
	WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsageblocked WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage = "Blocked"
	WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsagenotConfigured WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage = "NotConfigured"
	WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsagerequired WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage = "Required"
)


func PossibleValuesForWindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage() []string {
	return []string{
		string(WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsageallowed),
string(WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsageblocked),
string(WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsagenotConfigured),
string(WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsagerequired),
	}
}



func parseWindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage(input string) (*WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage, error) {
	vals := map[string]WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage{
		"allowed": WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsageallowed,
"blocked": WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsageblocked,
"notconfigured": WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsagenotConfigured,
"required": WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsagerequired,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := WindowsIdentityProtectionConfigurationPinLowercaseCharactersUsage(input)
	return &out, nil
}
