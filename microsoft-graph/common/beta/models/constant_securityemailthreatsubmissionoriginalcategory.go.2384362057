package models

import "strings"


// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.



type SecurityEmailThreatSubmissionOriginalCategory string

const (
	SecurityEmailThreatSubmissionOriginalCategorymalware SecurityEmailThreatSubmissionOriginalCategory = "Malware"
	SecurityEmailThreatSubmissionOriginalCategorynotJunk SecurityEmailThreatSubmissionOriginalCategory = "NotJunk"
	SecurityEmailThreatSubmissionOriginalCategoryphishing SecurityEmailThreatSubmissionOriginalCategory = "Phishing"
	SecurityEmailThreatSubmissionOriginalCategoryspam SecurityEmailThreatSubmissionOriginalCategory = "Spam"
)


func PossibleValuesForSecurityEmailThreatSubmissionOriginalCategory() []string {
	return []string{
		string(SecurityEmailThreatSubmissionOriginalCategorymalware),
string(SecurityEmailThreatSubmissionOriginalCategorynotJunk),
string(SecurityEmailThreatSubmissionOriginalCategoryphishing),
string(SecurityEmailThreatSubmissionOriginalCategoryspam),
	}
}



func parseSecurityEmailThreatSubmissionOriginalCategory(input string) (*SecurityEmailThreatSubmissionOriginalCategory, error) {
	vals := map[string]SecurityEmailThreatSubmissionOriginalCategory{
		"malware": SecurityEmailThreatSubmissionOriginalCategorymalware,
"notjunk": SecurityEmailThreatSubmissionOriginalCategorynotJunk,
"phishing": SecurityEmailThreatSubmissionOriginalCategoryphishing,
"spam": SecurityEmailThreatSubmissionOriginalCategoryspam,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := SecurityEmailThreatSubmissionOriginalCategory(input)
	return &out, nil
}
