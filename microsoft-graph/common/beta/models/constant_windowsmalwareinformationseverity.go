package models

import "strings"

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type WindowsMalwareInformationSeverity string

const (
	WindowsMalwareInformationSeverityhigh     WindowsMalwareInformationSeverity = "High"
	WindowsMalwareInformationSeveritylow      WindowsMalwareInformationSeverity = "Low"
	WindowsMalwareInformationSeveritymoderate WindowsMalwareInformationSeverity = "Moderate"
	WindowsMalwareInformationSeveritysevere   WindowsMalwareInformationSeverity = "Severe"
	WindowsMalwareInformationSeverityunknown  WindowsMalwareInformationSeverity = "Unknown"
)

func PossibleValuesForWindowsMalwareInformationSeverity() []string {
	return []string{
		string(WindowsMalwareInformationSeverityhigh),
		string(WindowsMalwareInformationSeveritylow),
		string(WindowsMalwareInformationSeveritymoderate),
		string(WindowsMalwareInformationSeveritysevere),
		string(WindowsMalwareInformationSeverityunknown),
	}
}

func parseWindowsMalwareInformationSeverity(input string) (*WindowsMalwareInformationSeverity, error) {
	vals := map[string]WindowsMalwareInformationSeverity{
		"high":     WindowsMalwareInformationSeverityhigh,
		"low":      WindowsMalwareInformationSeveritylow,
		"moderate": WindowsMalwareInformationSeveritymoderate,
		"severe":   WindowsMalwareInformationSeveritysevere,
		"unknown":  WindowsMalwareInformationSeverityunknown,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := WindowsMalwareInformationSeverity(input)
	return &out, nil
}
