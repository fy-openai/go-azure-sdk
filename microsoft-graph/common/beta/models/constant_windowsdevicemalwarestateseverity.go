package models

import "strings"

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type WindowsDeviceMalwareStateSeverity string

const (
	WindowsDeviceMalwareStateSeverityhigh     WindowsDeviceMalwareStateSeverity = "High"
	WindowsDeviceMalwareStateSeveritylow      WindowsDeviceMalwareStateSeverity = "Low"
	WindowsDeviceMalwareStateSeveritymoderate WindowsDeviceMalwareStateSeverity = "Moderate"
	WindowsDeviceMalwareStateSeveritysevere   WindowsDeviceMalwareStateSeverity = "Severe"
	WindowsDeviceMalwareStateSeverityunknown  WindowsDeviceMalwareStateSeverity = "Unknown"
)

func PossibleValuesForWindowsDeviceMalwareStateSeverity() []string {
	return []string{
		string(WindowsDeviceMalwareStateSeverityhigh),
		string(WindowsDeviceMalwareStateSeveritylow),
		string(WindowsDeviceMalwareStateSeveritymoderate),
		string(WindowsDeviceMalwareStateSeveritysevere),
		string(WindowsDeviceMalwareStateSeverityunknown),
	}
}

func parseWindowsDeviceMalwareStateSeverity(input string) (*WindowsDeviceMalwareStateSeverity, error) {
	vals := map[string]WindowsDeviceMalwareStateSeverity{
		"high":     WindowsDeviceMalwareStateSeverityhigh,
		"low":      WindowsDeviceMalwareStateSeveritylow,
		"moderate": WindowsDeviceMalwareStateSeveritymoderate,
		"severe":   WindowsDeviceMalwareStateSeveritysevere,
		"unknown":  WindowsDeviceMalwareStateSeverityunknown,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := WindowsDeviceMalwareStateSeverity(input)
	return &out, nil
}
