package models

import "strings"

// Copyright (c) HashiCorp Inc. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.

type DefenderDetectedMalwareActionsLowSeverity string

const (
	DefenderDetectedMalwareActionsLowSeverityallow         DefenderDetectedMalwareActionsLowSeverity = "Allow"
	DefenderDetectedMalwareActionsLowSeverityblock         DefenderDetectedMalwareActionsLowSeverity = "Block"
	DefenderDetectedMalwareActionsLowSeverityclean         DefenderDetectedMalwareActionsLowSeverity = "Clean"
	DefenderDetectedMalwareActionsLowSeveritydeviceDefault DefenderDetectedMalwareActionsLowSeverity = "DeviceDefault"
	DefenderDetectedMalwareActionsLowSeverityquarantine    DefenderDetectedMalwareActionsLowSeverity = "Quarantine"
	DefenderDetectedMalwareActionsLowSeverityremove        DefenderDetectedMalwareActionsLowSeverity = "Remove"
	DefenderDetectedMalwareActionsLowSeverityuserDefined   DefenderDetectedMalwareActionsLowSeverity = "UserDefined"
)

func PossibleValuesForDefenderDetectedMalwareActionsLowSeverity() []string {
	return []string{
		string(DefenderDetectedMalwareActionsLowSeverityallow),
		string(DefenderDetectedMalwareActionsLowSeverityblock),
		string(DefenderDetectedMalwareActionsLowSeverityclean),
		string(DefenderDetectedMalwareActionsLowSeveritydeviceDefault),
		string(DefenderDetectedMalwareActionsLowSeverityquarantine),
		string(DefenderDetectedMalwareActionsLowSeverityremove),
		string(DefenderDetectedMalwareActionsLowSeverityuserDefined),
	}
}

func parseDefenderDetectedMalwareActionsLowSeverity(input string) (*DefenderDetectedMalwareActionsLowSeverity, error) {
	vals := map[string]DefenderDetectedMalwareActionsLowSeverity{
		"allow":         DefenderDetectedMalwareActionsLowSeverityallow,
		"block":         DefenderDetectedMalwareActionsLowSeverityblock,
		"clean":         DefenderDetectedMalwareActionsLowSeverityclean,
		"devicedefault": DefenderDetectedMalwareActionsLowSeveritydeviceDefault,
		"quarantine":    DefenderDetectedMalwareActionsLowSeverityquarantine,
		"remove":        DefenderDetectedMalwareActionsLowSeverityremove,
		"userdefined":   DefenderDetectedMalwareActionsLowSeverityuserDefined,
	}
	if v, ok := vals[strings.ToLower(input)]; ok {
		return &v, nil
	}

	// otherwise presume it's an undefined value and best-effort it
	out := DefenderDetectedMalwareActionsLowSeverity(input)
	return &out, nil
}
